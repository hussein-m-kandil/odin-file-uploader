generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime

  @@map("sessions")
}

model User {
  id       Int    @id @default(autoincrement()) @map("user_id")
  fullname String @db.VarChar(100)
  username String @unique @db.VarChar(50)
  password String @db.Char(60)
  files    File[]

  @@map("users")
}

model File {
  id       String  @id @default(dbgenerated("gen_random_uuid()")) @map("file_id") @db.Uuid
  name     String  @map("file_name") @db.VarChar(100)
  isDir    Boolean @map("is_dir")
  isPublic Boolean @default(false) @map("is_public")
  parentId String? @map("parent_id") @db.Uuid
  parent   File?   @relation("FileSysTree", fields: [parentId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  children File[]  @relation("FileSysTree")
  ownerId  Int     @map("owner_id")
  owner    User    @relation(fields: [ownerId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@unique([name, parentId])
  @@map("files")
}
